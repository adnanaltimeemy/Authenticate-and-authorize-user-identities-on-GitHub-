from flask import Flask, redirect, request, session, url_for
import requests
import os

app = Flask(__name__)
app.secret_key = os.urandom(24)

# Replace with your GitHub OAuth App credentials
GITHUB_CLIENT_ID = 'your_client_id'
GITHUB_CLIENT_SECRET = 'your_client_secret'
GITHUB_AUTHORIZE_URL = 'https://github.com/login/oauth/authorize'
GITHUB_TOKEN_URL = 'https://github.com/login/oauth/access_token'
GITHUB_USER_API_URL = 'https://api.github.com/user'

@app.route('/')
def index():
    if 'github_user' in session:
        user = session['github_user']
        return f"Hello, {user['login']}!<br><a href='/logout'>Logout</a>"
    return '<a href="/login">Login with GitHub</a>'

@app.route('/login')
def login():
    github_auth_url = (
        f"{GITHUB_AUTHORIZE_URL}?client_id={GITHUB_CLIENT_ID}&scope=read:user"
    )
    return redirect(github_auth_url)

@app.route('/callback')
def callback():
    code = request.args.get('code')
    if not code:
        return "No code provided", 400

    # Exchange the code for an access token
    token_response = requests.post(
        GITHUB_TOKEN_URL,
        headers={'Accept': 'application/json'},
        data={
            'client_id': GITHUB_CLIENT_ID,
            'client_secret': GITHUB_CLIENT_SECRET,
            'code': code,
        },
    )
    token_json = token_response.json()
    access_token = token_json.get('access_token')

    if not access_token:
        return "Failed to get access token", 400

    # Fetch user info
    user_response = requests.get(
        GITHUB_USER_API_URL,
        headers={
            'Authorization': f'token {access_token}',
            'Accept': 'application/json'
        }
    )
    user_data = user_response.json()
    session['github_user'] = user_data
    return redirect(url_for('index'))

@app.route('/logout')
def logout():
    session.pop('github_user', None)
    return redirect(url
